# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ "–®–∞–≥ 2: –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏"
async def send_transport_choice(user_id):
    # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã
    state = dp.current_state(chat=user_id, user=user_id)
    await state.reset_state(with_data=False)  # –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("üöõ–ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º", callback_data="transport_auto"),
        InlineKeyboardButton("üöÇ–í–∞–≥–æ–Ω–∞–º–∏", callback_data="transport_train")
    )
    await bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:", reply_markup=keyboard)

# –®–∞–≥ 7: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
@dp.callback_query_handler(lambda c: c.data == "confirm")
async def confirm_handler(callback_query: CallbackQuery):
    data = user_data.pop(callback_query.from_user.id, {})
    transport = data.get('transport', '–ù–µ —É–∫–∞–∑–∞–Ω')
    cargo = data.get('cargo', '–ù–µ —É–∫–∞–∑–∞–Ω')
    sender = data.get('sender', '–ù–µ —É–∫–∞–∑–∞–Ω')
    quantity = data.get('quantity', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    status = data.get('status', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')

    message = (
        f"üöõ–ù–æ–≤–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µüîî\n"
        f"_______\n"
        f"–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {transport}\n"
        f"–ì—Ä—É–∑: {cargo}\n"
        f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {sender}\n"
    )
    if transport == "üöõ–ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º":
        message += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω: {quantity}\n"
    elif transport == "üöÇ–í–∞–≥–æ–Ω–∞–º–∏":
        message += f"–°—Ç–∞—Ç—É—Å: {status}\n"

    await bot.send_message(CHANNEL_ID, message)
    await callback_query.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    await send_transport_choice(callback_query.from_user.id)

# –®–∞–≥ 8: –û—Ç–º–µ–Ω–∞
@dp.callback_query_handler(lambda c: c.data == "cancel")
async def cancel_handler(callback_query: CallbackQuery):
    user_data.pop(callback_query.from_user.id, None)
    await callback_query.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    await send_transport_choice(callback_query.from_user.id)
