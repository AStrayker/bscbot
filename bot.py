# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞
@dp.callback_query_handler(lambda c: c.data == "confirm")
async def confirm_handler(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    data = user_data.pop(user_id, {})  # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    if not data:
        await callback_query.answer("–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    message = (
        f"üöõ–ù–æ–≤–æ–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µüîî\n"
        f"_______\n"
        f"–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {data.get('transport', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–ì—Ä—É–∑: {data.get('cargo', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {data.get('sender', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    )
    if data.get('transport') == "üöõ–ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º":
        message += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω: {data.get('quantity', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    elif data.get('transport') == "üöÇ–í–∞–≥–æ–Ω–∞–º–∏":
        message += f"–°—Ç–∞—Ç—É—Å: {data.get('status', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"

    await bot.send_message(CHANNEL_ID, message)
    await callback_query.answer("–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª!")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —à–∞–≥ –≤—ã–±–æ—Ä–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    await bot.send_message(user_id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ø–æ—Å–æ–±–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.")
    
    # –û—á–∏—Å—Ç–∏–º FSM –∫–æ–Ω—Ç–µ–∫—Å—Ç
    await OrderState.choosing_quantity.finish()
    await OrderState.choosing_status.finish()

    # –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –Ω–∞—á–∞–ª–æ: –®–∞–≥ 1 (–≤—ã–±–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞)
    keyboard = InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("üöõ–ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º", callback_data="transport_auto"),
        InlineKeyboardButton("üöÇ–í–∞–≥–æ–Ω–∞–º–∏", callback_data="transport_train")
    )
    await send_message_with_keyboard(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:", keyboard)

@dp.callback_query_handler(lambda c: c.data == "cancel")
async def cancel_handler(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    # –û—á–∏—Å—Ç–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º
    if user_id in user_data:
        del user_data[user_id]
    
    await callback_query.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    # –û—á–∏—Å—Ç–∏–º FSM –∫–æ–Ω—Ç–µ–∫—Å—Ç
    await OrderState.choosing_quantity.finish()
    await OrderState.choosing_status.finish()

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –≤—ã–±–æ—Ä–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (–®–∞–≥ 2)
    keyboard = InlineKeyboardMarkup(row_width=2).add(
        InlineKeyboardButton("üöõ–ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º", callback_data="transport_auto"),
        InlineKeyboardButton("üöÇ–í–∞–≥–æ–Ω–∞–º–∏", callback_data="transport_train")
    )
    await send_message_with_keyboard(callback_query.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:", keyboard)
