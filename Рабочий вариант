import telegram
from telegram import Update
from telegram.ext import (Updater, CommandHandler, MessageHandler, Filters,
                          CallbackContext)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = '6072615655:AAHQh3BVU3HNHd3p7vfvE3JsBzfHiG-hNMU'
# ID –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
CHANNEL_ID = '@precoinmarket_channel'

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

def start(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞."""
    user_id = update.effective_user.id
    user_data[user_id] = {}  # –û—á–∏—â–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:",
        reply_markup=telegram.ReplyKeyboardMarkup([
            ['üöõ –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º', 'üöÇ –í–∞–≥–æ–Ω–∞–º–∏']
        ], one_time_keyboard=True, resize_keyboard=True))

def handle_transport(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≥—Ä—É–∑–∞."""
    user_id = update.effective_user.id
    user_data[user_id]['transport'] = update.message.text

    update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–∑:",
        reply_markup=telegram.ReplyKeyboardMarkup([
            ['–ü–µ—Å–æ–∫', '–¶–µ–º–µ–Ω—Ç –ú500', '–¶–µ–º–µ–Ω—Ç –ú400'],
            ['–©–µ–±–µ–Ω—å 5x10', '–©–µ–±–µ–Ω—å 5x20', '–©–µ–±–µ–Ω—å 10x20'],
            ['–©–µ–±–µ–Ω—å 20x40', '–ú–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç']
        ], one_time_keyboard=True, resize_keyboard=True))

def handle_cargo(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≥—Ä—É–∑–∞."""
    user_id = update.effective_user.id
    user_data[user_id]['cargo'] = update.message.text

    if user_data[user_id]['cargo'] == '–ú–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç':
        update.message.reply_text(
            "–£—Ç–æ—á–Ω–∏—Ç–µ —Ç–∏–ø –º–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç–∞:",
            reply_markup=telegram.ReplyKeyboardMarkup([
                ['–ü—Ä–æ–≤–æ–ª–æ–∫–∞', '–ú–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç']
            ], one_time_keyboard=True, resize_keyboard=True))
    else:
        handle_sender(update, context)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è

def handle_sender(update: Update, context: CallbackContext) -> None:
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è."""
    user_id = update.effective_user.id
    if user_data[user_id]['cargo'] == '–ú–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç':
        user_data[user_id]['cargo'] = update.message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—Ç–æ—á–Ω–µ–Ω–Ω—ã–π —Ç–∏–ø

    update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:",
        reply_markup=telegram.ReplyKeyboardMarkup([
            ['–ö—Ä–∏–≤–æ–π –†–æ–≥ –¶–µ–º–µ–Ω—Ç', '–°–ø–µ—Ü–ö–∞—Ä—å–µ—Ä', '–°–º–∞—Ä—Ç –ì—Ä–∞–Ω–∏—Ç'],
            ['–ë–∞–ª–æ–≤—Å–∫–∏–µ –ü–µ—Å–∫–∏', '–õ—é–±–∏–º–æ–≤—Å–∫–∏–π –ö–∞—Ä—å–µ—Ä', '–¢–û–í –ú–ö–ö ‚Ññ3'],
            ['–ù–æ–≤–∞—Ç–æ—Ä']
        ], one_time_keyboard=True, resize_keyboard=True))

def handle_sender_choice(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω –∏–ª–∏ —Å—Ç–∞—Ç—É—Å."""
    user_id = update.effective_user.id
    user_data[user_id]['sender'] = update.message.text

    if user_data[user_id]['transport'] == 'üöõ –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º':
        update.message.reply_text(
            "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω:",
            reply_markup=telegram.ReplyKeyboardMarkup([
                ['1', '2', '3', '4', '5']
            ], one_time_keyboard=True, resize_keyboard=True))
    else:  # –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç - –≤–∞–≥–æ–Ω–∞–º–∏
        update.message.reply_text(
            "–£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≥—Ä—É–∑–∫–∏:",
            reply_markup=telegram.ReplyKeyboardMarkup([
                ['üü¢ –†–∞–∑–≥—Ä—É–∂–µ–Ω–æ', 'üü° –ù–µ —Ä–∞–∑–≥—Ä—É–∂–µ–Ω–æ', 'üü† –ù–µ —É–∫–∞–∑–∞–Ω–æ']
            ], one_time_keyboard=True, resize_keyboard=True))

def handle_quantity_or_status(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω –∏–ª–∏ —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≥—Ä—É–∑–∫–∏ –∏ –≤—ã–≤–æ–¥–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ."""
    user_id = update.effective_user.id
    if user_data[user_id]['transport'] == 'üöõ –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º':
        user_data[user_id]['quantity'] = update.message.text
    else:
        user_data[user_id]['status'] = update.message.text

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏
    message = f"""
–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {user_data[user_id]['transport']}
–ì—Ä—É–∑: {user_data[user_id]['cargo']}
–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {user_data[user_id]['sender']}
"""
    if 'quantity' in user_data[user_id]:
        message += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω: {user_data[user_id]['quantity']}"
    else:
        message += f"–°—Ç–∞—Ç—É—Å: {user_data[user_id]['status']}"

    update.message.reply_text(
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ:\n{message}",
        reply_markup=telegram.ReplyKeyboardMarkup([
            ['‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '‚ùå –û—Ç–º–µ–Ω–∞']
        ], one_time_keyboard=True, resize_keyboard=True))

def handle_confirmation(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω—É."""
    user_id = update.effective_user.id
    message = f"""
–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {user_data[user_id]['transport']}
–ì—Ä—É–∑: {user_data[user_id]['cargo']}
–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {user_data[user_id]['sender']}
"""
    if 'quantity' in user_data[user_id]:
        message += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω: {user_data[user_id]['quantity']}"
    else:
        message += f"–°—Ç–∞—Ç—É—Å: {user_data[user_id]['status']}"

    if update.message.text == '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞–Ω–∞–ª
        try:
            context.bot.send_message(chat_id=CHANNEL_ID, text=f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n{message}")
            update.message.reply_text("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª: {e}")
            update.message.reply_text("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    else:  # –û—Ç–º–µ–Ω–∞
        update.message.reply_text("–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")

    # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    user_data.pop(user_id, None)
    start(update, context)

def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(MessageHandler(Filters.regex('^(üöõ –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–º|üöÇ –í–∞–≥–æ–Ω–∞–º–∏)$'), handle_transport))
    dispatcher.add_handler(MessageHandler(Filters.regex('^(–ü–µ—Å–æ–∫|–¶–µ–º–µ–Ω—Ç –ú500|–¶–µ–º–µ–Ω—Ç –ú400|–©–µ–±–µ–Ω—å 5x10|–©–µ–±–µ–Ω—å 5x20|–©–µ–±–µ–Ω—å 10x20|–©–µ–±–µ–Ω—å 20x40|–ú–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç)$'), handle_cargo))
    dispatcher.add_handler(MessageHandler(Filters.regex('^(–ü—Ä–æ–≤–æ–ª–æ–∫–∞|–ú–µ—Ç–∞–ª–ª–æ–ø—Ä–æ–∫–∞—Ç)$'), handle_sender))  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ handle_sender
    dispatcher.add_handler(MessageHandler(Filters.regex('^(–ö—Ä–∏–≤–æ–π –†–æ–≥ –¶–µ–º–µ–Ω—Ç|–°–ø–µ—Ü–ö–∞—Ä—å–µ—Ä|–°–º–∞—Ä—Ç –ì—Ä–∞–Ω–∏—Ç|–ë–∞–ª–æ–≤—Å–∫–∏–µ –ü–µ—Å–∫–∏|–õ—é–±–∏–º–æ–≤—Å–∫–∏–π –ö–∞—Ä—å–µ—Ä|–¢–û–í –ú–ö–ö ‚Ññ3|–ù–æ–≤–∞—Ç–æ—Ä)$'), handle_sender_choice))
    dispatcher.add_handler(MessageHandler(Filters.regex('^(1|2|3|4|5|üü¢ –†–∞–∑–≥—Ä—É–∂–µ–Ω–æ|üü° –ù–µ —Ä–∞–∑–≥—Ä—É–∂–µ–Ω–æ|üü† –ù–µ —É–∫–∞–∑–∞–Ω–æ)$'), handle_quantity_or_status))
    dispatcher.add_handler(MessageHandler(Filters.regex('^(‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å|‚ùå –û—Ç–º–µ–Ω–∞)$'), handle_confirmation))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
